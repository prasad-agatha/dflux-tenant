# Generated by Django 3.1.5 on 2023-01-02 04:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TenantUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=128)),
                ('mobile_number', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('last_location', models.CharField(blank=True, max_length=255)),
                ('created_location', models.CharField(blank=True, max_length=255)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_managed', models.BooleanField(default=False)),
                ('is_bot_app', models.BooleanField(default=False)),
                ('is_password_expired', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_password_autoset', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, max_length=64)),
                ('user_role', models.BigIntegerField(null=True)),
                ('billing_address_country', models.CharField(default='INDIA', max_length=255)),
                ('billing_address', models.JSONField(null=True)),
                ('has_billing_address', models.BooleanField(default=False)),
                ('user_timezone', models.CharField(default='Asia/Kolkata', max_length=255)),
                ('last_active', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('last_login_time', models.DateTimeField(null=True)),
                ('last_logout_time', models.DateTimeField(null=True)),
                ('last_login_ip', models.CharField(blank=True, max_length=255)),
                ('last_logout_ip', models.CharField(blank=True, max_length=255)),
                ('last_login_medium', models.CharField(default='email', max_length=7)),
                ('last_login_uagent', models.TextField(blank=True)),
                ('token_updated_at', models.DateTimeField(null=True)),
                ('token_expired_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Charts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256)),
                ('chart_type', models.CharField(max_length=256)),
                ('save_from', models.CharField(blank=True, choices=[('query', 'query'), ('data_model', 'data_model')], max_length=256, null=True)),
                ('data', models.JSONField()),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Charts',
                'verbose_name_plural': 'Charts',
                'db_table': 'charts',
            },
        ),
        migrations.CreateModel(
            name='ChartTrigger',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('email', models.JSONField(default=list)),
                ('description', models.TextField(blank=True, null=True)),
                ('cron_expression', models.JSONField(default=dict)),
                ('timezone', models.CharField(max_length=256)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=256, null=True)),
                ('chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.charts')),
            ],
            options={
                'verbose_name': 'Chart Trigger',
                'verbose_name_plural': 'Chart Triggers',
                'db_table': 'chart_triggers',
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256)),
                ('engine', models.CharField(blank=True, max_length=256, null=True)),
                ('dbname', models.CharField(blank=True, max_length=256, null=True)),
                ('username', models.CharField(blank=True, max_length=256, null=True)),
                ('password', models.CharField(blank=True, max_length=256, null=True)),
                ('port', models.CharField(blank=True, max_length=256, null=True)),
                ('host', models.CharField(blank=True, max_length=256, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('connection_type', models.CharField(blank=True, choices=[('INTERNAL', 'internal'), ('EXTERNAL', 'external'), ('SNOWFLAKE', 'snowflake')], max_length=256, null=True)),
                ('account', models.CharField(blank=True, max_length=256, null=True)),
                ('warehouse', models.CharField(blank=True, max_length=256, null=True)),
                ('schema', models.CharField(blank=True, max_length=256, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Connection',
                'verbose_name_plural': 'Connections',
                'db_table': 'connections',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='DashBoard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboards',
                'db_table': 'dashboards',
            },
        ),
        migrations.CreateModel(
            name='ExcelData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('tablename', models.CharField(max_length=256)),
                ('file_type', models.CharField(blank=True, max_length=256, null=True)),
                ('connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.connection')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Excel Data',
                'verbose_name_plural': 'Excel Data',
                'db_table': 'excel_data',
            },
        ),
        migrations.CreateModel(
            name='JsonData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('tablename', models.CharField(max_length=256)),
                ('connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.connection')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Json Data',
                'verbose_name_plural': 'Json Data',
                'db_table': 'json_data',
            },
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('asset', models.FileField(upload_to='assets')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256)),
                ('token', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'db_table': 'projects',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('engine_type', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(max_length=2000)),
                ('description', models.TextField(blank=True, null=True)),
                ('vars', models.JSONField(blank=True, null=True)),
                ('raw_sql', models.TextField()),
                ('verify', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=256, null=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.connection')),
                ('excel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.exceldata')),
                ('json', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.jsondata')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project')),
            ],
            options={
                'db_table': 'query',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subdomain_prefix', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('email', models.JSONField(default=list)),
                ('description', models.TextField(blank=True, null=True)),
                ('cron_expression', models.JSONField(default=dict)),
                ('timezone', models.CharField(max_length=256)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('charttrigger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.charttrigger')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project')),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.query')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Trigger',
                'verbose_name_plural': 'Triggers',
                'db_table': 'triggers',
                'unique_together': {('project', 'name')},
            },
        ),
        migrations.CreateModel(
            name='TriggerOutput',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('data', models.JSONField(default=dict)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
                ('trigger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.trigger')),
            ],
            options={
                'verbose_name': 'Trigger Output',
                'verbose_name_plural': 'Trigger Outputs',
                'db_table': 'trigger_outputs',
            },
        ),
        migrations.CreateModel(
            name='TeamInvitation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('user', models.CharField(max_length=256)),
                ('token', models.CharField(max_length=1000)),
                ('status', models.BooleanField(default=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.team')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Team Invitation',
                'verbose_name_plural': 'Team Invitations',
                'db_table': 'team_invitations',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('subject', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('attachment', models.URLField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Support',
                'verbose_name_plural': 'Supports',
                'db_table': 'supports',
            },
        ),
        migrations.CreateModel(
            name='ShareDashBoard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('token', models.CharField(max_length=256)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.dashboard')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Share Dashboard',
                'verbose_name_plural': 'Share Dashboards',
                'db_table': 'share_dashboards',
            },
        ),
        migrations.CreateModel(
            name='ShareCharts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('token', models.CharField(max_length=256)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('charts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.charts')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Share Chart',
                'verbose_name_plural': 'Share Charts',
                'db_table': 'share_charts',
            },
        ),
        migrations.AddField(
            model_name='query',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.AddField(
            model_name='query',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProjectTeam',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.team')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Project Team',
                'verbose_name_plural': 'Project Teams',
                'db_table': 'project_team',
            },
        ),
        migrations.CreateModel(
            name='ProjectInvitation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('invitee', models.CharField(max_length=256)),
                ('token', models.CharField(max_length=1000)),
                ('status', models.BooleanField(default=True)),
                ('access', models.CharField(choices=[('READ', 'read'), ('WRITE', 'write')], default='READ', max_length=256)),
                ('module_access', models.JSONField(default=list)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Project Invitation',
                'verbose_name_plural': 'Project Invitations',
                'db_table': 'project_invitations',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.AddField(
            model_name='project',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='jsondata',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.project'),
        ),
        migrations.AddField(
            model_name='jsondata',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.CreateModel(
            name='GoogleBigQueryCredential',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('credential_path', models.URLField()),
                ('connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.connection')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Google Bigquery Credential',
                'verbose_name_plural': 'Google Bigquery Credentials',
                'db_table': 'google_bigquery_credentials',
            },
        ),
        migrations.AddField(
            model_name='exceldata',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.project'),
        ),
        migrations.AddField(
            model_name='exceldata',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.CreateModel(
            name='DataModelMetaData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256)),
                ('skipped', models.BooleanField(default=False)),
                ('pre_processing', models.JSONField(default=dict)),
                ('modeling_type', models.CharField(choices=[('classification', 'classification'), ('regression', 'regression'), ('timeseries', 'timeseries')], max_length=256)),
                ('algorithms', models.JSONField(default=list)),
                ('target_variable', models.CharField(max_length=256)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.query')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Datamodel Metadata',
                'verbose_name_plural': 'Datamodel Metadata',
                'db_table': 'datamodel_metadata',
            },
        ),
        migrations.CreateModel(
            name='DataModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=256)),
                ('model_type', models.CharField(max_length=256)),
                ('data', models.JSONField()),
                ('other_params', models.JSONField()),
                ('extra', models.JSONField(blank=True, null=True)),
                ('pickle_url', models.URLField(blank=True, null=True)),
                ('scaler_url', models.URLField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('meta_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.datamodelmetadata')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Data Model',
                'verbose_name_plural': 'Data Models',
                'db_table': 'data_models',
            },
        ),
        migrations.CreateModel(
            name='DashBoardCharts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('height', models.CharField(blank=True, max_length=256, null=True)),
                ('width', models.CharField(blank=True, max_length=256, null=True)),
                ('position_x', models.CharField(blank=True, max_length=256, null=True)),
                ('position_y', models.CharField(blank=True, max_length=256, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.charts')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.dashboard')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Dashboard Charts',
                'verbose_name_plural': 'Dashboard Charts',
                'db_table': 'dashboard_charts',
            },
        ),
        migrations.AddField(
            model_name='dashboard',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project'),
        ),
        migrations.AddField(
            model_name='dashboard',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.CreateModel(
            name='ContactSale',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('subject', models.CharField(max_length=256)),
                ('message', models.TextField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Contact Sale',
                'verbose_name_plural': 'Contact Sales',
                'db_table': 'contact_sales',
            },
        ),
        migrations.AddField(
            model_name='connection',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project'),
        ),
        migrations.AddField(
            model_name='connection',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.AddField(
            model_name='charttrigger',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project'),
        ),
        migrations.AddField(
            model_name='charttrigger',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.AddField(
            model_name='charts',
            name='data_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.datamodel'),
        ),
        migrations.AddField(
            model_name='charts',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project'),
        ),
        migrations.AddField(
            model_name='charts',
            name='query',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.query'),
        ),
        migrations.AddField(
            model_name='charts',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.AddField(
            model_name='charts',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chart_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tenantuser',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant'),
        ),
        migrations.CreateModel(
            name='TeamMembers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.team')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_member', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team Members',
                'verbose_name_plural': 'Team Members',
                'db_table': 'team_members',
                'unique_together': {('user', 'team')},
            },
        ),
        migrations.CreateModel(
            name='ProjectMembers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_member', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project Members',
                'verbose_name_plural': 'Project Members',
                'db_table': 'project_members',
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together={('created_by', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='jsondata',
            unique_together={('created_by', 'tablename')},
        ),
        migrations.CreateModel(
            name='GoogleSheet',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('tablename', models.CharField(max_length=256)),
                ('connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.connection')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.tenant')),
            ],
            options={
                'verbose_name': 'Google Sheet',
                'verbose_name_plural': 'Google Sheets',
                'db_table': 'google_sheets',
                'unique_together': {('created_by', 'tablename')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='exceldata',
            unique_together={('created_by', 'tablename', 'file_type')},
        ),
        migrations.AlterUniqueTogether(
            name='dashboard',
            unique_together={('name', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='connection',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='charttrigger',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='charts',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='tenantuser',
            unique_together={('email', 'tenant'), ('mobile_number', 'tenant')},
        ),
    ]
